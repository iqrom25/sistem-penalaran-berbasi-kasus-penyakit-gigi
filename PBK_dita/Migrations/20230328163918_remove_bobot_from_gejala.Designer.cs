// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PBK_dita.Repositories;

namespace PBK_dita.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230328163918_remove_bobot_from_gejala")]
    partial class remove_bobot_from_gejala
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("GejalaRekamMedis", b =>
                {
                    b.Property<int>("ListGejalaId")
                        .HasColumnType("int");

                    b.Property<int>("ListRekamMedisId")
                        .HasColumnType("int");

                    b.HasKey("ListGejalaId", "ListRekamMedisId");

                    b.HasIndex("ListRekamMedisId");

                    b.ToTable("GejalaRekamMedis");
                });

            modelBuilder.Entity("GejalaRiwayatKonsultasi", b =>
                {
                    b.Property<int>("ListGejalaId")
                        .HasColumnType("int");

                    b.Property<int>("ListRiwayatKonsultasiId")
                        .HasColumnType("int");

                    b.HasKey("ListGejalaId", "ListRiwayatKonsultasiId");

                    b.HasIndex("ListRiwayatKonsultasiId");

                    b.ToTable("GejalaRiwayatKonsultasi");
                });

            modelBuilder.Entity("PBK_dita.Models.Gejala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KodeGejala")
                        .IsRequired()
                        .HasColumnType("varchar(767)")
                        .HasColumnName("kode_gejala");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KodeGejala")
                        .IsUnique();

                    b.ToTable("m_gejala");
                });

            modelBuilder.Entity("PBK_dita.Models.Penyakit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gambar")
                        .HasColumnType("text");

                    b.Property<string>("KodePenyakit")
                        .IsRequired()
                        .HasColumnType("varchar(767)")
                        .HasColumnName("kode_penyakit");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Solusi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KodePenyakit")
                        .IsUnique();

                    b.ToTable("m_penyakit");
                });

            modelBuilder.Entity("PBK_dita.Models.RekamMedis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("PenyakitId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TanggalInput")
                        .HasColumnType("timestamp")
                        .HasColumnName("tanggal_input");

                    b.HasKey("Id");

                    b.HasIndex("PenyakitId");

                    b.ToTable("m_rekam_medis");
                });

            modelBuilder.Entity("PBK_dita.Models.RiwayatKonsultasi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("PenyakitId")
                        .HasColumnType("int");

                    b.Property<double>("Similiarity")
                        .HasColumnType("double");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TanggalInput")
                        .HasColumnType("timestamp")
                        .HasColumnName("tanggal_input");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PenyakitId");

                    b.HasIndex("UserId");

                    b.ToTable("RiwayatKonsultasi");
                });

            modelBuilder.Entity("PBK_dita.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("jenis_kelamin");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Umur")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("m_user");
                });

            modelBuilder.Entity("GejalaRekamMedis", b =>
                {
                    b.HasOne("PBK_dita.Models.Gejala", null)
                        .WithMany()
                        .HasForeignKey("ListGejalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PBK_dita.Models.RekamMedis", null)
                        .WithMany()
                        .HasForeignKey("ListRekamMedisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GejalaRiwayatKonsultasi", b =>
                {
                    b.HasOne("PBK_dita.Models.Gejala", null)
                        .WithMany()
                        .HasForeignKey("ListGejalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PBK_dita.Models.RiwayatKonsultasi", null)
                        .WithMany()
                        .HasForeignKey("ListRiwayatKonsultasiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PBK_dita.Models.RekamMedis", b =>
                {
                    b.HasOne("PBK_dita.Models.Penyakit", "Penyakit")
                        .WithMany()
                        .HasForeignKey("PenyakitId");

                    b.Navigation("Penyakit");
                });

            modelBuilder.Entity("PBK_dita.Models.RiwayatKonsultasi", b =>
                {
                    b.HasOne("PBK_dita.Models.Penyakit", "Penyakit")
                        .WithMany()
                        .HasForeignKey("PenyakitId");

                    b.HasOne("PBK_dita.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Penyakit");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
